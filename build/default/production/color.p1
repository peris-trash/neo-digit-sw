Version 4.0 HI-TECH Software Intermediate Code
"55 ./color.h
[; ;./color.h: 55: {
[s S1 `uc 1 `uc 1 `uc 1 ]
[n S1 . r g b ]
[v F344 `(f ~T0 @X0 1 tf2`f`f ]
"499 /opt/microchip/xc8/v2.05/pic/include/c99/math.h
[; ;/opt/microchip/xc8/v2.05/pic/include/c99/math.h: 499: __attribute__((nonreentrant)) float powf(float, float);
[v _powf `JF344 ~T0 @X0 0 e ]
"35 ./color.h
[; ;./color.h: 35: const uint8_t gamma[256] = {
[v _gamma `Cuc ~T0 @X0 -> 256 `i e ]
[i _gamma
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 7 `i `uc
-> -> 7 `i `uc
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 8 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 10 `i `uc
-> -> 10 `i `uc
-> -> 10 `i `uc
-> -> 11 `i `uc
-> -> 11 `i `uc
-> -> 11 `i `uc
-> -> 12 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 13 `i `uc
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 17 `i `uc
-> -> 17 `i `uc
-> -> 18 `i `uc
-> -> 18 `i `uc
-> -> 19 `i `uc
-> -> 19 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 21 `i `uc
-> -> 21 `i `uc
-> -> 22 `i `uc
-> -> 22 `i `uc
-> -> 23 `i `uc
-> -> 24 `i `uc
-> -> 24 `i `uc
-> -> 25 `i `uc
-> -> 25 `i `uc
-> -> 26 `i `uc
-> -> 27 `i `uc
-> -> 27 `i `uc
-> -> 28 `i `uc
-> -> 29 `i `uc
-> -> 29 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 33 `i `uc
-> -> 34 `i `uc
-> -> 35 `i `uc
-> -> 35 `i `uc
-> -> 36 `i `uc
-> -> 37 `i `uc
-> -> 38 `i `uc
-> -> 39 `i `uc
-> -> 39 `i `uc
-> -> 40 `i `uc
-> -> 41 `i `uc
-> -> 42 `i `uc
-> -> 43 `i `uc
-> -> 44 `i `uc
-> -> 45 `i `uc
-> -> 46 `i `uc
-> -> 47 `i `uc
-> -> 48 `i `uc
-> -> 49 `i `uc
-> -> 50 `i `uc
-> -> 50 `i `uc
-> -> 51 `i `uc
-> -> 52 `i `uc
-> -> 54 `i `uc
-> -> 55 `i `uc
-> -> 56 `i `uc
-> -> 57 `i `uc
-> -> 58 `i `uc
-> -> 59 `i `uc
-> -> 60 `i `uc
-> -> 61 `i `uc
-> -> 62 `i `uc
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 66 `i `uc
-> -> 67 `i `uc
-> -> 68 `i `uc
-> -> 69 `i `uc
-> -> 70 `i `uc
-> -> 72 `i `uc
-> -> 73 `i `uc
-> -> 74 `i `uc
-> -> 75 `i `uc
-> -> 77 `i `uc
-> -> 78 `i `uc
-> -> 79 `i `uc
-> -> 81 `i `uc
-> -> 82 `i `uc
-> -> 83 `i `uc
-> -> 85 `i `uc
-> -> 86 `i `uc
-> -> 87 `i `uc
-> -> 89 `i `uc
-> -> 90 `i `uc
-> -> 92 `i `uc
-> -> 93 `i `uc
-> -> 95 `i `uc
-> -> 96 `i `uc
-> -> 98 `i `uc
-> -> 99 `i `uc
-> -> 101 `i `uc
-> -> 102 `i `uc
-> -> 104 `i `uc
-> -> 105 `i `uc
-> -> 107 `i `uc
-> -> 109 `i `uc
-> -> 110 `i `uc
-> -> 112 `i `uc
-> -> 114 `i `uc
-> -> 115 `i `uc
-> -> 117 `i `uc
-> -> 119 `i `uc
-> -> 120 `i `uc
-> -> 122 `i `uc
-> -> 124 `i `uc
-> -> 126 `i `uc
-> -> 127 `i `uc
-> -> 129 `i `uc
-> -> 131 `i `uc
-> -> 133 `i `uc
-> -> 135 `i `uc
-> -> 137 `i `uc
-> -> 138 `i `uc
-> -> 140 `i `uc
-> -> 142 `i `uc
-> -> 144 `i `uc
-> -> 146 `i `uc
-> -> 148 `i `uc
-> -> 150 `i `uc
-> -> 152 `i `uc
-> -> 154 `i `uc
-> -> 156 `i `uc
-> -> 158 `i `uc
-> -> 160 `i `uc
-> -> 162 `i `uc
-> -> 164 `i `uc
-> -> 167 `i `uc
-> -> 169 `i `uc
-> -> 171 `i `uc
-> -> 173 `i `uc
-> -> 175 `i `uc
-> -> 177 `i `uc
-> -> 180 `i `uc
-> -> 182 `i `uc
-> -> 184 `i `uc
-> -> 186 `i `uc
-> -> 189 `i `uc
-> -> 191 `i `uc
-> -> 193 `i `uc
-> -> 196 `i `uc
-> -> 198 `i `uc
-> -> 200 `i `uc
-> -> 203 `i `uc
-> -> 205 `i `uc
-> -> 208 `i `uc
-> -> 210 `i `uc
-> -> 213 `i `uc
-> -> 215 `i `uc
-> -> 218 `i `uc
-> -> 220 `i `uc
-> -> 223 `i `uc
-> -> 225 `i `uc
-> -> 228 `i `uc
-> -> 231 `i `uc
-> -> 233 `i `uc
-> -> 236 `i `uc
-> -> 239 `i `uc
-> -> 241 `i `uc
-> -> 244 `i `uc
-> -> 247 `i `uc
-> -> 249 `i `uc
-> -> 252 `i `uc
-> -> 255 `i `uc
..
]
[v F480 `(S1 ~T0 @X0 1 tf3`uc`uc`uc ]
"4 color.c
[; ;color.c: 4: COLOR color_rgb(uint8_t r, uint8_t g, uint8_t b)
[v _color_rgb `TF480 ~T0 @X0 1 e ]
"5
[; ;color.c: 5: {
{
[e :U _color_rgb ]
"4
[; ;color.c: 4: COLOR color_rgb(uint8_t r, uint8_t g, uint8_t b)
[v _r `uc ~T0 @X0 1 r1 ]
[v _g `uc ~T0 @X0 1 r2 ]
[v _b `uc ~T0 @X0 1 r3 ]
"5
[; ;color.c: 5: {
[f ]
"6
[; ;color.c: 6:     COLOR new_color;
[v _new_color `S1 ~T0 @X0 1 a ]
"7
[; ;color.c: 7:     new_color.r = gamma[r];
[e = . _new_color 0 *U + &U _gamma * -> _r `ux -> -> # *U &U _gamma `ui `ux ]
"8
[; ;color.c: 8:     new_color.g = gamma[g];
[e = . _new_color 1 *U + &U _gamma * -> _g `ux -> -> # *U &U _gamma `ui `ux ]
"9
[; ;color.c: 9:     new_color.b = gamma[b];
[e = . _new_color 2 *U + &U _gamma * -> _b `ux -> -> # *U &U _gamma `ui `ux ]
"10
[; ;color.c: 10:     return new_color;
[e ) _new_color ]
[e $UE 2  ]
"11
[; ;color.c: 11: }
[e :UE 2 ]
}
[v F486 `(S1 ~T0 @X0 1 tf1`ul ]
"13
[; ;color.c: 13: COLOR color_Hex(uint32_t hex)
[v _color_Hex `TF486 ~T0 @X0 1 e ]
"14
[; ;color.c: 14: {
{
[e :U _color_Hex ]
"13
[; ;color.c: 13: COLOR color_Hex(uint32_t hex)
[v _hex `ul ~T0 @X0 1 r1 ]
"14
[; ;color.c: 14: {
[f ]
"15
[; ;color.c: 15:     return color_rgb(((hex >> 16) & 0xFF), ((hex >> 8) & 0xFF), hex & 0xFF);
[e ) ( _color_rgb (3 , , -> & >> _hex -> 16 `i -> -> -> 255 `i `l `ul `uc -> & >> _hex -> 8 `i -> -> -> 255 `i `l `ul `uc -> & _hex -> -> -> 255 `i `l `ul `uc ]
[e $UE 3  ]
"16
[; ;color.c: 16: }
[e :UE 3 ]
}
"18
[; ;color.c: 18: COLOR color_hsv(uint16_t hue, uint16_t brightness)
[v _color_hsv `(S1 ~T0 @X0 1 ef2`us`us ]
"19
[; ;color.c: 19: {
{
[e :U _color_hsv ]
"18
[; ;color.c: 18: COLOR color_hsv(uint16_t hue, uint16_t brightness)
[v _hue `us ~T0 @X0 1 r1 ]
[v _brightness `us ~T0 @X0 1 r2 ]
"19
[; ;color.c: 19: {
[f ]
"20
[; ;color.c: 20:     COLOR color;
[v _color `S1 ~T0 @X0 1 a ]
"22
[; ;color.c: 22:     uint8_t scaledHue = (hue * 6);
[v _scaledHue `uc ~T0 @X0 1 a ]
[e = _scaledHue -> * -> _hue `ui -> -> 6 `i `ui `uc ]
"24
[; ;color.c: 24:     uint8_t segment = scaledHue / 256;
[v _segment `uc ~T0 @X0 1 a ]
[e = _segment -> / -> _scaledHue `i -> 256 `i `uc ]
"26
[; ;color.c: 26:     uint8_t segmentOffset = scaledHue - (segment * 256);
[v _segmentOffset `uc ~T0 @X0 1 a ]
[e = _segmentOffset -> - -> _scaledHue `i * -> _segment `i -> 256 `i `uc ]
"28
[; ;color.c: 28:     uint8_t complement = 0;
[v _complement `uc ~T0 @X0 1 a ]
[e = _complement -> -> 0 `i `uc ]
"29
[; ;color.c: 29:     uint8_t prev = (brightness * ( 255 - segmentOffset)) / 256;
[v _prev `uc ~T0 @X0 1 a ]
[e = _prev -> / * -> _brightness `ui -> - -> 255 `i -> _segmentOffset `i `ui -> -> 256 `i `ui `uc ]
"30
[; ;color.c: 30:     uint8_t next = (brightness * segmentOffset) / 256;
[v _next `uc ~T0 @X0 1 a ]
[e = _next -> / * -> _brightness `ui -> _segmentOffset `ui -> -> 256 `i `ui `uc ]
"32
[; ;color.c: 32:     switch(segment)
[e $U 6  ]
"33
[; ;color.c: 33:     {
{
"34
[; ;color.c: 34:     case 0:
[e :U 7 ]
"35
[; ;color.c: 35:         return color_rgb(brightness, next, complement);
[e ) ( _color_rgb (3 , , -> _brightness `uc _next _complement ]
[e $UE 4  ]
"36
[; ;color.c: 36:     case 1:
[e :U 8 ]
"37
[; ;color.c: 37:         return color_rgb(prev, brightness, complement);
[e ) ( _color_rgb (3 , , _prev -> _brightness `uc _complement ]
[e $UE 4  ]
"38
[; ;color.c: 38:     case 2:
[e :U 9 ]
"39
[; ;color.c: 39:         return color_rgb(complement, brightness, next);
[e ) ( _color_rgb (3 , , _complement -> _brightness `uc _next ]
[e $UE 4  ]
"40
[; ;color.c: 40:     case 3:
[e :U 10 ]
"41
[; ;color.c: 41:         return color_rgb(complement, prev, brightness);
[e ) ( _color_rgb (3 , , _complement _prev -> _brightness `uc ]
[e $UE 4  ]
"42
[; ;color.c: 42:     case 4:
[e :U 11 ]
"43
[; ;color.c: 43:         return color_rgb(next, complement, brightness);
[e ) ( _color_rgb (3 , , _next _complement -> _brightness `uc ]
[e $UE 4  ]
"44
[; ;color.c: 44:     case 5:
[e :U 12 ]
"45
[; ;color.c: 45:     default:
[e :U 13 ]
"46
[; ;color.c: 46:         return color_rgb(brightness, complement, prev);
[e ) ( _color_rgb (3 , , -> _brightness `uc _complement _prev ]
[e $UE 4  ]
"47
[; ;color.c: 47:     }
}
[e $U 5  ]
[e :U 6 ]
[e [\ -> _segment `i , $ -> 0 `i 7
 , $ -> 1 `i 8
 , $ -> 2 `i 9
 , $ -> 3 `i 10
 , $ -> 4 `i 11
 , $ -> 5 `i 12
 13 ]
[e :U 5 ]
"48
[; ;color.c: 48: }
[e :UE 4 ]
}
"50
[; ;color.c: 50: uint8_t dynamic_gamma(double gamma, uint8_t max_out, uint8_t color)
[v _dynamic_gamma `(uc ~T0 @X0 1 ef3`d`uc`uc ]
"51
[; ;color.c: 51: {
{
[e :U _dynamic_gamma ]
"50
[; ;color.c: 50: uint8_t dynamic_gamma(double gamma, uint8_t max_out, uint8_t color)
[v _gamma `d ~T0 @X0 1 r1 ]
[v _max_out `uc ~T0 @X0 1 r2 ]
[v _color `uc ~T0 @X0 1 r3 ]
"51
[; ;color.c: 51: {
[f ]
"52
[; ;color.c: 52:     return (uint8_t)(powf(((double)color / 255.f),gamma) * max_out + 0.5f);
[e ) -> + * ( _powf (2 , -> / -> _color `d -> -> .255. `f `d `f -> _gamma `f -> -> _max_out `i `f -> .0.5 `f `uc ]
[e $UE 14  ]
"53
[; ;color.c: 53: }
[e :UE 14 ]
}
